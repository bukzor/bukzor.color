#!/bin/bash
# Acceptance test for both Rust and Python implementations
set -euo pipefail

# Configuration
TEST_CASES_FILE="tests/test_cases.json"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Running acceptance tests for bukzor.color implementations...${NC}"

# Function to test an implementation
test_implementation() {
    local impl_name="$1"
    local cmd_prefix="$2"
    local test_case_name="$3"
    local expected="$4"

    echo -e "${YELLOW}Testing $impl_name: $test_case_name${NC}"

    # Run the command and capture output
    local actual_output
    if ! actual_output=$($cmd_prefix 2>&1); then
        echo -e "${RED}‚ùå $impl_name failed to execute: $test_case_name${NC}"
        return 1
    fi

    # For now, just check that the command runs without error
    # TODO: Implement proper JSON comparison when implementations are complete
    echo -e "${GREEN}‚úÖ $impl_name executed successfully: $test_case_name${NC}"
    return 0
}

# Test Rust implementation
echo -e "${YELLOW}=== Testing Rust Implementation ===${NC}"
rust_failures=0

if command -v cargo >/dev/null 2>&1; then
    cd rust
    if cargo build --quiet; then
        echo -e "${GREEN}‚úÖ Rust build successful${NC}"

        # Test basic help command
        if ./target/debug/bukzor-color --help >/dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ Rust help command works${NC}"
        else
            echo -e "${RED}‚ùå Rust help command failed${NC}"
            ((rust_failures++))
        fi

        # Test basic convert command
        if ./target/debug/bukzor-color convert "#ff0000" --json >/dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ Rust convert command works${NC}"
        else
            echo -e "${RED}‚ùå Rust convert command failed${NC}"
            ((rust_failures++))
        fi
    else
        echo -e "${RED}‚ùå Rust build failed${NC}"
        ((rust_failures++))
    fi
    cd ..
else
    echo -e "${YELLOW}‚ö†Ô∏è  Rust/cargo not available, skipping Rust tests${NC}"
fi

# Test Python implementation
echo -e "${YELLOW}=== Testing Python Implementation ===${NC}"
python_failures=0

if command -v uv >/dev/null 2>&1; then
    cd python
    if uv sync --quiet; then
        echo -e "${GREEN}‚úÖ Python dependencies installed${NC}"

        # Test basic help command
        if uv run python -m bukzor_color.cli --help >/dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ Python help command works${NC}"
        else
            echo -e "${RED}‚ùå Python help command failed${NC}"
            ((python_failures++))
        fi

        # Test basic convert command
        if uv run python -m bukzor_color.cli convert "#ff0000" --json >/dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ Python convert command works${NC}"
        else
            echo -e "${RED}‚ùå Python convert command failed${NC}"
            ((python_failures++))
        fi
    else
        echo -e "${RED}‚ùå Python dependency installation failed${NC}"
        ((python_failures++))
    fi
    cd ..
else
    echo -e "${YELLOW}‚ö†Ô∏è  uv not available, skipping Python tests${NC}"
fi

# Summary
total_failures=$((rust_failures + python_failures))
if [ $total_failures -eq 0 ]; then
    echo -e "${GREEN}üéâ All acceptance tests passed!${NC}"
    exit 0
else
    echo -e "${RED}‚ùå $total_failures test(s) failed${NC}"
    exit 1
fi
